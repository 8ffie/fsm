@using FrequentSubtreeMining.Algorithm.Models;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css" />
    <title>Поиск частых подграфов в XML-документах</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    <div class="container">
        @Html.Partial("SearchParameters")
       
            <div id="loader" style="display:none;"></div>

            <div id="searchResults" style="display:none;" class="animate-bottom">

                <fieldset>
                    <legend>Результаты поиска</legend>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="panel panel-default" style="display:block">
                                <div class="panel-heading">Список исходных деревьев</div>
                                <div class="panel-body encodingList">
                                    <div class="vertical-list" id="initialTreeSelect"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-8">
                            <div class="panel panel-default" style="display:block">
                                <div class="panel-heading">Canvas с начальными деревьями</div>
                                <div class="panel-body encodingList">
                                    <canvas id="initialTreesCanvas">
                                        Отображение рисунков в элементе canvas (HTML5) не поддерживается Вашим браузером.
                                    </canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3">
                            <div class="panel panel-default" style="display:block">
                                <div class="panel-heading">Список частых деревьев</div>
                                <div class="panel-body encodingList">
                                    <div class="vertical-list" id="freqTreeSelect"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <label for="freqSupport">Поддержка выбранного поддерева:</label>
                            <p id="freqSupport">-</p>
                            <div class="panel panel-default" style="display:block">
                                <div class="panel-heading">Список начальных деревьев, в которых есть частые</div>
                                <div class="panel-body encodingList">
                                    <div class="vertical-list" id="freqInitialTreeSelect"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="panel panel-default" style="display:block">
                                <div class="panel-heading">Canvas с частыми поддеревьями на начальных</div>
                                <div class="panel-body encodingList">
                                    <canvas id="freqTreesCanvas">
                                        Отображение рисунков в элементе canvas (HTML5) не поддерживается Вашим браузером.
                                    </canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
</div>

    <script>
                        //Отрисовка 1 дерева в элементе canvas
                        function drawTree(nodes, lines, canvasId) {
                            var c = document.getElementById(canvasId);
                            var ctx = c.getContext("2d");
                            ctx.clearRect(0, 0, c.width, c.height);
                            for (var j = 0; j < lines.length; j++) {
                                var line = lines[j];
                                ctx.beginPath();
                                ctx.moveTo(line.x1, line.y1);
                                ctx.lineTo(line.x2, line.y2);
                                ctx.strokeStyle = "black";
                                ctx.stroke();
                            }
                            for (var i = 0; i < nodes.length; i++) {
                                ctx.beginPath();
                                ctx.arc(nodes[i].x, nodes[i].y, nodes[i].r, 0, 2 * Math.PI);
                                if (nodes[i].label.indexOf("(") !== -1 && nodes[i].label.indexOf(")") !== -1) {
                                    ctx.fillStyle = "green";
                                    nodes[i].label = nodes[i].label.substr(1, nodes[i].label.length - 2);
                                }
                                else
                                    ctx.fillStyle = "gray";
                                ctx.fill();
                                ctx.font = "30px Arial";
                                ctx.strokeStyle = "black";
                                ctx.fillStyle = "black";
                                ctx.fillText(nodes[i].label, nodes[i].x - nodes[i].r / 2, nodes[i].y + nodes[i].r / 2);
                                ctx.stroke();
                            }
                        }
    </script>

    <script>
        //Главная функция поиска
        $('#searchParameters').submit(function (e) {
            document.getElementById("loader").style.display = "block";
            var form = document.getElementById('searchParameters');
            var formData = new FormData(form);
            $.ajax({
                type: "POST",
                url: '@Url.Action("Search", "Mining")',
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {
                    if (result.code != -1) {
                        showTrees(result.doc, 'initialTreeSelect', 'initialTreesCanvas', 0);
                        showTrees(result.res, 'freqTreeSelect', 'freqTreesCanvas', 1);
                        document.getElementById("loader").style.display = "none";
                        document.getElementById("searchResults").style.display = "block";
                    }
                    else
                    {
                        alert(result.text);
                    }
                }
            });
            e.preventDefault();
        });

        function clearTreeList(listId)
        {
            var parent = document.getElementById(listId);
            while (parent.firstChild) {
                parent.removeChild(parent.firstChild);
            }
            return parent;
        }

        function createTreeListItem(encoding) {
            var input = document.createElement('input');
            input.value = encoding;
            input.readOnly = "readonly";
            input.className = "treeEncoding";
            //input.id = "treeEncoding";
            input.name = "treeEncoding";
            input.title = getTagEntry(encoding);
            return input;
        }

        function setListItemHighlight(listId, activeItem)
        {
            var list = document.getElementById(listId).getElementsByTagName('form');
            for (var i = 0; i < list.length; i++) {
                list[i].style.background = "transparent";
                list[i].getElementsByTagName('input')[0].style.color = "black";
            }
            activeItem.style.background = "green";
            activeItem.getElementsByTagName('input')[0].style.color = "white";
        }

        //Отображение деревьев списком
        function showTrees(trees, listId, canvasId, comparator) {
            var parent = clearTreeList(listId);
            for (var i = 0; i < trees.length; i++) {
                var input = createTreeListItem(trees[i]);
                var child = document.createElement('a');
                var form = document.createElement('form');
                form.appendChild(input);
                form.addEventListener("click", function (e) {
                    setListItemHighlight(listId, this);

                    var newForm = document.createElement('form');
                    var thisInputList = this.getElementsByTagName('input');
                    var thisInput = thisInputList[0];

                    //Запись в запрос выбранного дерева
                    var myInput = createTreeListItem(thisInput.value);
                    newForm.appendChild(myInput);
                    //Запись в запрос исходных деревьев
                    var inputListtemp = document.getElementById('initialTreeSelect').getElementsByTagName('input');
                    for (var i = 0; i < inputListtemp.length; i++) {
                        var input = createTreeListItem(inputListtemp[i].value);
                        newForm.appendChild(input);
                    }

                    var formData = new FormData(newForm);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetNumb", "Mining")',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (result) {
                            if (comparator) {
                                document.getElementById("freqSupport").textContent = result.support;
                                showInitialTrees(result.treeList);
                            }
                            var canvasScreen = document.getElementById(canvasId);
                            canvasScreen.width = result.width;
                            canvasScreen.height = result.height;
                            drawTree(result.nodes, result.lines, canvasId);
                        },
                        error: function (xhr, status, p3) {
                            alert(xhr.responseText);
                        }
                    });
                }, false);
                child.appendChild(form);
                parent.appendChild(child);
            }
        }

        function showInitialTrees(trees)
        {
            var listId = 'freqInitialTreeSelect';

            var parent = clearTreeList(listId);


            for (var i = 0; i < trees.length; i++) {
                var child = document.createElement('a');
                var form = document.createElement('form');
                var input = createTreeListItem(trees[i]);
                form.appendChild(input);
                form.addEventListener("click", function (e) {
                    setListItemHighlight(listId, this);
                    var formData = new FormData(this);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetNumb", "Mining")',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (result) {
                            var canvasScreen = document.getElementById('freqTreesCanvas');
                            canvasScreen.width = result.width;
                            canvasScreen.height = result.height;
                            drawTree(result.nodes, result.lines, 'freqTreesCanvas');
                        },
                        error: function (xhr, status, p3) {
                            alert(xhr.responseText);
                        }
                    });
                }, false);
                child.appendChild(form);
                parent.appendChild(child);
            }
        }

        function getTagEntry(encoding)
        {
            var dfs = encoding.split('@TextTreeEncoding.Separator'); 
            var tagEntry = [];
            var tagStack = [];
            var offsetCounter = 0;
            for (var i = 0; i < dfs.length; i++) {
                if (dfs[i] !== "^") {
                    var str = "";
                    for (var j = 0; j < offsetCounter; j++) {
                        str += "  ";
                    }
                    tagEntry.push(str + "<" + dfs[i] + ">");
                    tagStack.push(dfs[i]);
                    offsetCounter++;
                }
                else {
                    offsetCounter--;
                    var str = "";
                    for (var j = 0; j < offsetCounter; j++) {
                        str += "  ";
                    }
                    var elem = tagStack.pop();
                    tagEntry.push(str + "</" + elem + ">");
                }
            }
            fLen = tagEntry.length;
            text = "";
            for (i = 0; i < fLen; i++) {
                text += tagEntry[i] + "\n";
            }
            return text;
        }
    </script>
</body>
</html>
